@using ProductReviewAnalyzer.AnalysisTrackerService.Domain.ValueObjects
@using Microsoft.AspNetCore.Components.Routing
@inject IMediator Mediator
@inject UserSession Session


@if (_history is null)
{
    <p>Завантаження…</p>
}
else if (!_history.Any())
{
    <p>Поки що порожньо.</p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Дата</th>
            <th>Статус</th>
            <th>URL(и)</th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var h in _history)
        {
            <tr>
                <td>@h.CreatedAtUtc.ToLocalTime()</td>
                <td>@h.Status</td>
                <td>
                    @foreach (var u in h.ProductUrls)
                    {
                        <div>@u</div>
                    }
                </td>
                    <td class="text-end align-middle">
                        <NavLink class="btn btn-primary"
                                 href="@($"/req/{h.Id}")"
                                 Match="NavLinkMatch.All">
                            Переглянути
                        </NavLink>
                    </td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    [Parameter] public bool AllUsers { get; set; }
    private List<AnalysisRequestDto>? _history;
    private bool _firstRender = true;
    private bool _disposed;

    protected override void OnInitialized()
    {
        _disposed = false;
    }

    public void Dispose()
    {
        _disposed = true;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (_firstRender)
        {
            _firstRender = false;

            var userId = await Session.GetUserIdAsync();

            if (_disposed) return; // Don't continue if disposed

            _history = await Mediator.Send(new GetHistoryQuery(AllUsers is false ? userId : null));

            if (!_disposed)
            {
                StateHasChanged();
            }
        }
    }
}